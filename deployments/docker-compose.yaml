version: "3.7"
services:

  idempotencer-dev:
    container_name: idempotencer-dev
    hostname: idempotencer-dev
    build:
      context: ./../
      image: c1rno/idempotencer
      dockerfile: deployments/Dockerfile
    networks: &net
      - idempotencer
    depends_on:
      - postgres
      - kafka

  postgres:
    networks: *net
    container_name: postgres
    hostname: postgres
    image: postgres:12.2
    environment:
      - POSTGRES_DB=main
      - POSTGRES_USER=root
      - POSTGRES_PORT=5432
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: "pg_isready -U main"

  kafka:
    networks: *net
    container_name: kafka
    hostname: kafka
    image: wurstmeister/kafka:2.12-2.4.1
    restart: on-failure
    ports: ["9092:9092"]
    volumes: [/var/run/docker.sock:/var/run/docker.sock]
    depends_on: [zookeeper]
    environment:
      KAFKA_ADVERTISED_LISTENERS: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    healthcheck:
      test: "nc -z localhost 9092"

  zookeeper:
    networks: *net
    container_name: zookeeper
    hostname: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports: ["2181:2181"]
    healthcheck:
      test: "nc -z localhost 2181"

networks:
  idempotencer:
